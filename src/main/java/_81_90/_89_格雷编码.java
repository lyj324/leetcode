package _81_90;

/**
 * @author lyj
 * @version 1.0
 * @date 2019/10/20 10:54
 */

import java.util.ArrayList;
import java.util.List;

/**
 * 格雷编码是一个二进制数字系统，在该系统中，两个连续的数值仅有一个位数的差异。
 * <p>
 * 给定一个代表编码总位数的非负整数 n，打印其格雷编码序列。格雷编码序列必须以 0 开头。
 * <p>
 * 示例 1:
 * <p>
 * 输入: 2
 * 输出: [0,1,3,2]
 * 解释:
 * 00 - 0
 * 01 - 1
 * 11 - 3
 * 10 - 2
 * <p>
 * 对于给定的 n，其格雷编码序列并不唯一。
 * 例如，[0,2,3,1] 也是一个有效的格雷编码序列。
 * <p>
 * 00 - 0
 * 10 - 2
 * 11 - 3
 * 01 - 1
 * 示例 2:
 * <p>
 * 输入: 0
 * 输出: [0]
 * 解释: 我们定义格雷编码序列必须以 0 开头。
 *      给定编码总位数为 n 的格雷编码序列，其长度为 2n。当 n = 0 时，长度为 20 = 1。
 *      因此，当 n = 0 时，其格雷编码序列为 [0]。
 * <p>
 * 来源：力扣（LeetCode）
 * 链接：https://leetcode-cn.com/problems/gray-code
 * 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
 */
public class _89_格雷编码 {
    public static void main(String[] args) {
        grayCode(3).forEach(System.out::println);
    }

    /**
     *
     * @param n
     * @return
     * 先把上一层的结果最前面添加0,然后在上一次的结果最前面添加1
     * 然后倒置排列
     * 用10进制表示时
     * 先把上一层的结果加0,然后在上一次的结果加2^(n-1)
     * 然后倒置排列
     * ---------------------------------------------------
     * 2进制表示
     * n=0时     []
     * n=1时     0  |1
     * n=2时     00 01|11 10
     * n=3时     000 001 011 010|110 111 101 100
     * .......
     * --------------------------------------------------
     * 10进制表示时
     * n=0时     0
     * n=1时     0+0   |0+2^0
     * n=2时     0+0 1+0|1+2^1 0+2^1
     * n=3时     0+0 1+0 3+0 2+0|2+2^2 3+2^2 1+2^2 0+2^2
     */
    public static List<Integer> grayCode(int n) {
        List<Integer> res = new ArrayList<Integer>() {
            {
                add(0);
            }
        };
        int head = 1;
        for (int i = 0; i < n; i++) {
            for (int j = res.size() - 1; j >= 0; j--) {
                res.add(head + res.get(j));
            }
            head <<= 1;
        }
        return res;
    }
}
